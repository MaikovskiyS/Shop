# docker-compose.yml
version: "3.7"
services:
  zookeeper:
    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    restart: always
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./internal/metrics/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    # volumes:
    #   - grafana-storage:/var/lib/grafana
  mongodb:
    image: mongo:6-jammy
    ports:
      - '27017:27017'
    volumes:
      - mongodb-volume:/data/db
  postgres:
    image: postgres
    restart: always
    environment:
      - PORT:5432
      - HOST:127.0.0.1
      - POSTGRES_USER:postgres
      - POSTGRES_PASSWORD:Wild54323
    ports:
      -"5432:5432"   
volumes:
  postgres-volume:
  mongodb-volume:
  kafka-volume:
  zookeeper-volume:
  prometheus-volume:
  grafana-volume: